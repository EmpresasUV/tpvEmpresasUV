// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Diagnostics;
using Microsoft.EntityFrameworkCore;
using tpvEmpresasUV;
using tpvEmpresasUV.Properties;

namespace TpvEmpresasUV.modelos;

public partial class dbEmpresasUVContexto : DbContext
{
    public dbEmpresasUVContexto()
    {
    }

    public dbEmpresasUVContexto(DbContextOptions<dbEmpresasUVContexto> options)
        : base(options)
    {
    }

    public virtual DbSet<Ahorradore> Ahorradores { get; set; }

    public virtual DbSet<AhorradoresBancario> AhorradoresBancarios { get; set; }

    public virtual DbSet<AsistenciasDispositivo> AsistenciasDispositivos { get; set; }

    public virtual DbSet<AsistenciasEmpleado> AsistenciasEmpleados { get; set; }

    public virtual DbSet<AsistenciasEmpresa> AsistenciasEmpresas { get; set; }

    public virtual DbSet<AsistenciasHuella> AsistenciasHuellas { get; set; }

    public virtual DbSet<AsistenciasRegistro> AsistenciasRegistros { get; set; }

    public virtual DbSet<AuthToken> AuthTokens { get; set; }

    public virtual DbSet<BecasBeneficiario> BecasBeneficiarios { get; set; }

    public virtual DbSet<BecasComedore> BecasComedores { get; set; }

    public virtual DbSet<BecasEmpleado> BecasEmpleados { get; set; }

    public virtual DbSet<BecasFestivo> BecasFestivos { get; set; }

    public virtual DbSet<BecasMe> BecasMes { get; set; }

    public virtual DbSet<BecasPeriodo> BecasPeriodos { get; set; }

    public virtual DbSet<BecasProgramacion> BecasProgramacions { get; set; }

    public virtual DbSet<CPostal> CPostals { get; set; }

    public virtual DbSet<CarrerasNumero> CarrerasNumeros { get; set; }

    public virtual DbSet<CarrerasParticipante> CarrerasParticipantes { get; set; }

    public virtual DbSet<ClavesSolicitud> ClavesSolicituds { get; set; }

    public virtual DbSet<Folio> Folios { get; set; }

    public virtual DbSet<NominaDispositivo> NominaDispositivos { get; set; }

    public virtual DbSet<NominaEmpleado> NominaEmpleados { get; set; }

    public virtual DbSet<NominaEmpresa> NominaEmpresas { get; set; }

    public virtual DbSet<NominaHuella> NominaHuellas { get; set; }

    public virtual DbSet<NominaRegistro> NominaRegistros { get; set; }

    public virtual DbSet<TpvCaja> TpvCajas { get; set; }

    public virtual DbSet<TpvCajasAlmacene> TpvCajasAlmacenes { get; set; }

    public virtual DbSet<TpvCajasCorte> TpvCajasCortes { get; set; }

    public virtual DbSet<TpvOrdenesPago> TpvOrdenesPagos { get; set; }

    public virtual DbSet<TpvRefBanamex> TpvRefBanamexes { get; set; }

    public virtual DbSet<TpvSucursale> TpvSucursales { get; set; }

    public virtual DbSet<TpvUsuario> TpvUsuarios { get; set; }

    public virtual DbSet<TpvVenta> TpvVentas { get; set; }

    public virtual DbSet<TpvVentasAux> TpvVentasAuxes { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    public virtual DbSet<UsuariosEmpresa> UsuariosEmpresas { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseSqlServer("Data Source=DC-CONTABLE\\COMPAC;Initial Catalog=dbEmpresasUV;Persist Security Info=True;User ID=sa;Password=Promo1002##;Encrypt=True;Trust Server Certificate=True");       
    }
        

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Ahorradore>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ahorrado__3213E83FD76CD964");

            entity.ToTable("ahorradores");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Aprobado)
                .HasMaxLength(2)
                .HasColumnName("aprobado");
            entity.Property(e => e.Correo)
                .HasMaxLength(255)
                .HasColumnName("correo");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.Folio).HasColumnName("folio");
            entity.Property(e => e.Materno)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("materno");
            entity.Property(e => e.NPersonal)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("n_personal");
            entity.Property(e => e.Nombres)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("nombres");
            entity.Property(e => e.Paterno)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("paterno");
            entity.Property(e => e.Secreto)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("secreto");
            entity.Property(e => e.TelFijo)
                .HasMaxLength(10)
                .HasColumnName("tel_fijo");
            entity.Property(e => e.TelMovil)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("tel_movil");
            entity.Property(e => e.Tipo)
                .IsRequired()
                .HasMaxLength(2)
                .HasComment("C= Cliente; A=Administrativo")
                .HasColumnName("tipo");
            entity.Property(e => e.UaHost)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("ua_host");
            entity.Property(e => e.UaIp)
                .IsRequired()
                .HasMaxLength(16)
                .HasColumnName("ua_ip");
            entity.Property(e => e.UaTime)
                .IsRequired()
                .HasMaxLength(12)
                .HasColumnName("ua_time");
            entity.Property(e => e.Usuario)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("usuario");
        });

        modelBuilder.Entity<AhorradoresBancario>(entity =>
        {
            entity.HasKey(e => e.Folio).HasName("PK__ahorrado__E8F12C9EFD5F9428");

            entity.ToTable("ahorradores_bancarios");

            entity.Property(e => e.Folio)
                .ValueGeneratedNever()
                .HasColumnName("folio");
            entity.Property(e => e.Clabe)
                .IsRequired()
                .HasMaxLength(18)
                .HasColumnName("clabe");
            entity.Property(e => e.Cuenta)
                .HasMaxLength(18)
                .HasColumnName("cuenta");
            entity.Property(e => e.IdAhorrador).HasColumnName("id_ahorrador");
            entity.Property(e => e.Institucion)
                .HasMaxLength(255)
                .HasColumnName("institucion");
            entity.Property(e => e.Plaza)
                .HasMaxLength(255)
                .HasColumnName("plaza");
        });

        modelBuilder.Entity<AsistenciasDispositivo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__asistenc__3213E83FEC9CEA6D");

            entity.ToTable("asistencias_dispositivos");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Direccion)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("direccion");
            entity.Property(e => e.Info)
                .HasMaxLength(255)
                .HasColumnName("info");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("nombre");
            entity.Property(e => e.Puerto)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("puerto");
            entity.Property(e => e.Serie)
                .HasMaxLength(255)
                .HasColumnName("serie");
        });

        modelBuilder.Entity<AsistenciasEmpleado>(entity =>
        {
            entity.HasKey(e => e.IdNominas).HasName("PK__asistenc__48A0A5264188DC5C");

            entity.ToTable("asistencias_empleados");

            entity.Property(e => e.IdNominas)
                .HasMaxLength(255)
                .HasColumnName("id_nominas");
            entity.Property(e => e.IdChecador).HasColumnName("id_checador");
            entity.Property(e => e.IdEmpresa).HasColumnName("id_empresa");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<AsistenciasEmpresa>(entity =>
        {
            entity.HasKey(e => e.IdEmpresa).HasName("PK__asistenc__4A0B7E2C870BF1AB");

            entity.ToTable("asistencias_empresas");

            entity.Property(e => e.IdEmpresa)
                .ValueGeneratedNever()
                .HasColumnName("id_empresa");
            entity.Property(e => e.DbName)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("DB_Name");
            entity.Property(e => e.NombreEmpresa)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<AsistenciasHuella>(entity =>
        {
            entity.HasKey(e => e.IdChecador).HasName("PK__asistenc__EA921C72539814B7");

            entity.ToTable("asistencias_huellas");

            entity.Property(e => e.IdChecador)
                .ValueGeneratedNever()
                .HasColumnName("id_checador");
            entity.Property(e => e.Fp00).HasColumnName("FP_00");
            entity.Property(e => e.Fp01).HasColumnName("FP_01");
            entity.Property(e => e.Fp02).HasColumnName("FP_02");
            entity.Property(e => e.Fp03).HasColumnName("FP_03");
            entity.Property(e => e.Fp04).HasColumnName("FP_04");
            entity.Property(e => e.Fp05).HasColumnName("FP_05");
            entity.Property(e => e.Fp06).HasColumnName("FP_06");
            entity.Property(e => e.Fp07).HasColumnName("FP_07");
            entity.Property(e => e.Fp08).HasColumnName("FP_08");
            entity.Property(e => e.Fp09).HasColumnName("FP_09");
            entity.Property(e => e.Fp10).HasColumnName("FP_10");
        });

        modelBuilder.Entity<AsistenciasRegistro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("asistencias_registros");

            entity.Property(e => e.Fecha)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("fecha");
            entity.Property(e => e.Hora)
                .HasMaxLength(255)
                .HasColumnName("hora");
            entity.Property(e => e.IdChecador)
                .HasMaxLength(10)
                .HasColumnName("id_checador");
            entity.Property(e => e.Tipo)
                .HasMaxLength(255)
                .HasColumnName("tipo");
        });

        modelBuilder.Entity<AuthToken>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("auth_tokens");

            entity.Property(e => e.Tiempo)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("tiempo");
            entity.Property(e => e.Tipo)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("tipo");
            entity.Property(e => e.Usuario)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("usuario");
        });

        modelBuilder.Entity<BecasBeneficiario>(entity =>
        {
            entity.HasKey(e => e.Matricula).HasName("PK__becas_be__30962D14B5656088");

            entity.ToTable("becas_beneficiarios");

            entity.Property(e => e.Matricula)
                .HasMaxLength(255)
                .HasColumnName("matricula");
            entity.Property(e => e.Calendarizo)
                .HasComment("Bandera de programación de calendario")
                .HasColumnName("calendarizo");
            entity.Property(e => e.Correo)
                .HasMaxLength(255)
                .HasComment("Correo electronico institucional")
                .HasColumnName("correo");
            entity.Property(e => e.Dependencia)
                .HasMaxLength(255)
                .HasComment("Dependencia que beca al alumno")
                .HasColumnName("dependencia");
            entity.Property(e => e.Estado)
                .HasMaxLength(1)
                .HasComment("A Activo, I Inactivo")
                .HasColumnName("estado");
            entity.Property(e => e.FFinal)
                .HasComment("Fecha fin alimentos")
                .HasColumnType("date")
                .HasColumnName("f_final");
            entity.Property(e => e.FInicio)
                .HasComment("Fecha inicio alimentos")
                .HasColumnType("date")
                .HasColumnName("f_inicio");
            entity.Property(e => e.HorarioAbierto)
                .HasMaxLength(2)
                .HasComment("Recibe a cualquier hora")
                .HasColumnName("horario_abierto");
            entity.Property(e => e.Huella1)
                .HasComment("Indice derecho")
                .HasColumnName("huella1");
            entity.Property(e => e.Huella2)
                .HasComment("Indice Izquierdo")
                .HasColumnName("huella2");
            entity.Property(e => e.IdComedor)
                .HasComment("Id del comedor que tiene asignado")
                .HasColumnName("id_comedor");
            entity.Property(e => e.NAlimentos)
                .HasComment("Numero de alimentos autorizados en el periodo")
                .HasColumnName("n_alimentos");
            entity.Property(e => e.NAlimentosMin)
                .HasComment("Minimo de alimentos")
                .HasColumnName("n_alimentos_min");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("nombre");
            entity.Property(e => e.Region)
                .HasMaxLength(255)
                .HasComment("Región de aplicación")
                .HasColumnName("region");
            entity.Property(e => e.Secreto)
                .HasMaxLength(255)
                .HasComment("clave de acceso a calemdario de alimentos")
                .HasColumnName("secreto");
        });

        modelBuilder.Entity<BecasComedore>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__becas_co__3213E83FB9443C5D");

            entity.ToTable("becas_comedores");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<BecasEmpleado>(entity =>
        {
            entity.HasKey(e => e.Matricula).HasName("PK__becas_em__30962D14BB43ED70");

            entity.ToTable("becas_empleados");

            entity.Property(e => e.Matricula)
                .HasMaxLength(255)
                .HasColumnName("matricula");
            entity.Property(e => e.Calendarizo)
                .HasComment("Bandera de programación de calendario")
                .HasColumnName("calendarizo");
            entity.Property(e => e.Correo)
                .HasMaxLength(255)
                .HasComment("Correo electronico institucional")
                .HasColumnName("correo");
            entity.Property(e => e.Dependencia)
                .HasMaxLength(255)
                .HasComment("Dependencia que beca al alumno")
                .HasColumnName("dependencia");
            entity.Property(e => e.Estado)
                .HasMaxLength(1)
                .HasComment("A Activo, I Inactivo")
                .HasColumnName("estado");
            entity.Property(e => e.HorarioAbierto)
                .HasMaxLength(2)
                .HasComment("Recibe a cualquier hora")
                .HasColumnName("horario_abierto");
            entity.Property(e => e.Huella1)
                .HasComment("Indice derecho")
                .HasColumnName("huella1");
            entity.Property(e => e.Huella2)
                .HasComment("Indice Izquierdo")
                .HasColumnName("huella2");
            entity.Property(e => e.IdComedor)
                .HasComment("Id del comedor que tiene asignado")
                .HasColumnName("id_comedor");
            entity.Property(e => e.NAlimentos)
                .HasComment("Numero de alimentos autorizados en el periodo")
                .HasColumnName("n_alimentos");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("nombre");
            entity.Property(e => e.Region)
                .HasMaxLength(255)
                .HasComment("Región de aplicación")
                .HasColumnName("region");
            entity.Property(e => e.Secreto)
                .HasMaxLength(255)
                .HasComment("clave de acceso a calemdario de alimentos")
                .HasColumnName("secreto");
        });

        modelBuilder.Entity<BecasFestivo>(entity =>
        {
            entity.HasKey(e => e.Fecha).HasName("PK__becas_fe__E1141323EB3DCE71");

            entity.ToTable("becas_festivos");

            entity.Property(e => e.Fecha)
                .HasColumnType("date")
                .HasColumnName("fecha");
        });

        modelBuilder.Entity<BecasMe>(entity =>
        {
            entity.HasKey(e => e.IdMes).HasName("PK__becas_me__6C8AF537987403E7");

            entity.ToTable("becas_mes");

            entity.Property(e => e.IdMes)
                .ValueGeneratedNever()
                .HasColumnName("id_mes");
            entity.Property(e => e.NBecas).HasColumnName("n_becas");
        });

        modelBuilder.Entity<BecasPeriodo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__becas_pe__3213E83F03A50539");

            entity.ToTable("becas_periodos");

            entity.Property(e => e.Id)
                .HasMaxLength(11)
                .HasColumnName("id");
            entity.Property(e => e.Estado)
                .HasMaxLength(1)
                .HasColumnName("estado");
            entity.Property(e => e.FFinal)
                .HasColumnType("date")
                .HasColumnName("f_final");
            entity.Property(e => e.FInicio)
                .HasColumnType("date")
                .HasColumnName("f_inicio");
        });

        modelBuilder.Entity<BecasProgramacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("becas_programacion");

            entity.Property(e => e.Estado)
                .HasMaxLength(1)
                .HasComment("D Disponible, E Entregado")
                .HasColumnName("estado");
            entity.Property(e => e.Fecha)
                .HasComment("Fecha del alimento")
                .HasColumnType("date")
                .HasColumnName("fecha");
            entity.Property(e => e.IdMatricula)
                .HasMaxLength(50)
                .HasComment("Matricula del alumno becado")
                .HasColumnName("id_matricula");
            entity.Property(e => e.TipoAlimento)
                .HasMaxLength(1)
                .HasComment("D Desayuno, C Comida")
                .HasColumnName("tipo_alimento");
        });

        modelBuilder.Entity<CPostal>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("c_postal", tb => tb.HasComment("Catálogo para los códigos postales en las direcciones."));

            entity.Property(e => e.Asentamiento)
                .HasMaxLength(254)
                .HasColumnName("asentamiento");
            entity.Property(e => e.Ciudad)
                .HasMaxLength(200)
                .HasColumnName("ciudad");
            entity.Property(e => e.Cp).HasColumnName("cp");
            entity.Property(e => e.Estado)
                .HasMaxLength(200)
                .HasColumnName("estado");
            entity.Property(e => e.Municipio)
                .HasMaxLength(200)
                .HasColumnName("municipio");
            entity.Property(e => e.Tipo)
                .HasMaxLength(100)
                .HasColumnName("tipo");
            entity.Property(e => e.Zona)
                .HasMaxLength(100)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<CarrerasNumero>(entity =>
        {
            entity.HasKey(e => e.Region).HasName("PK__carreras__7AF3A905DC0DBECB");

            entity.ToTable("carreras_numeros");

            entity.Property(e => e.Region)
                .HasMaxLength(255)
                .HasColumnName("region");
            entity.Property(e => e.Numero).HasColumnName("numero");
        });

        modelBuilder.Entity<CarrerasParticipante>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__carreras__3213E83FFE63AA3C");

            entity.ToTable("carreras_participantes");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Categoria)
                .HasMaxLength(255)
                .HasColumnName("categoria");
            entity.Property(e => e.Ciudad)
                .HasMaxLength(255)
                .HasColumnName("ciudad");
            entity.Property(e => e.Correo)
                .HasMaxLength(255)
                .HasColumnName("correo");
            entity.Property(e => e.Cp).HasColumnName("cp");
            entity.Property(e => e.Discapacidad).HasColumnName("discapacidad");
            entity.Property(e => e.Equipo)
                .HasMaxLength(255)
                .HasColumnName("equipo");
            entity.Property(e => e.Estado)
                .HasMaxLength(255)
                .HasColumnName("estado");
            entity.Property(e => e.FolioRegion)
                .HasMaxLength(255)
                .HasColumnName("folio_region");
            entity.Property(e => e.Longitud)
                .HasMaxLength(255)
                .HasColumnName("longitud");
            entity.Property(e => e.Mail)
                .HasMaxLength(255)
                .HasColumnName("mail");
            entity.Property(e => e.Matricula)
                .HasMaxLength(255)
                .HasColumnName("matricula");
            entity.Property(e => e.Nacimiento)
                .HasColumnType("date")
                .HasColumnName("nacimiento");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("nombre");
            entity.Property(e => e.NumCorredor).HasColumnName("num_corredor");
            entity.Property(e => e.Pais)
                .HasMaxLength(255)
                .HasColumnName("pais");
            entity.Property(e => e.Rama)
                .HasMaxLength(255)
                .HasColumnName("rama");
            entity.Property(e => e.Region)
                .HasMaxLength(255)
                .HasColumnName("region");
            entity.Property(e => e.Registro)
                .HasMaxLength(255)
                .HasColumnName("registro");
            entity.Property(e => e.Talla)
                .HasMaxLength(255)
                .HasColumnName("talla");
            entity.Property(e => e.Telefono).HasColumnName("telefono");
            entity.Property(e => e.TelefonoEmergencia).HasColumnName("telefono_emergencia");
        });

        modelBuilder.Entity<ClavesSolicitud>(entity =>
        {
            entity.HasKey(e => e.TimeRequest).HasName("PK__claves_s__80E2D4FF24B2AC96");

            entity.ToTable("claves_solicitud");

            entity.Property(e => e.TimeRequest)
                .HasMaxLength(254)
                .HasComment("Tiempo de solicitud")
                .HasColumnName("time_request");
            entity.Property(e => e.Hash)
                .HasMaxLength(255)
                .HasComment("Código hash de solicitud")
                .HasColumnName("hash");
            entity.Property(e => e.MailUser)
                .HasMaxLength(255)
                .HasComment("Correo del usuario")
                .HasColumnName("mail_user");
            entity.Property(e => e.ModOrigen)
                .HasMaxLength(255)
                .HasComment("Modulo que usa el cambio")
                .HasColumnName("mod_origen");
            entity.Property(e => e.NewMail)
                .HasMaxLength(255)
                .HasComment("Nuevo correo al cambiar")
                .HasColumnName("new_mail");
            entity.Property(e => e.WhatsappNumber)
                .HasMaxLength(10)
                .HasComment("Número de whatsapp")
                .HasColumnName("whatsapp_number");
        });

        modelBuilder.Entity<Folio>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__folios__3213E83FD8B1B6D5");

            entity.ToTable("folios");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Concepto)
                .HasMaxLength(254)
                .HasColumnName("concepto");
            entity.Property(e => e.Folio1).HasColumnName("folio");
            entity.Property(e => e.Serie)
                .HasMaxLength(255)
                .HasColumnName("serie");
        });

        modelBuilder.Entity<NominaDispositivo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__disposit__3213E83F539CD01C");

            entity.ToTable("nomina_dispositivos");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Info)
                .HasMaxLength(255)
                .HasColumnName("info");
            entity.Property(e => e.Ip)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("ip");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("nombre");
            entity.Property(e => e.Puerto)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("puerto");
            entity.Property(e => e.Serie)
                .HasMaxLength(255)
                .HasColumnName("serie");
        });

        modelBuilder.Entity<NominaEmpleado>(entity =>
        {
            entity.HasKey(e => e.IdNominas).HasName("PK__empleado__48A0A526227ADCD7");

            entity.ToTable("nomina_empleados");

            entity.Property(e => e.IdNominas)
                .HasMaxLength(255)
                .HasColumnName("id_nominas");
            entity.Property(e => e.IdChecador).HasColumnName("id_checador");
            entity.Property(e => e.IdEmpresa).HasColumnName("id_empresa");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<NominaEmpresa>(entity =>
        {
            entity.HasKey(e => e.IdEmpresa).HasName("PK__empresas__4A0B7E2C40BBC364");

            entity.ToTable("nomina_empresas");

            entity.Property(e => e.IdEmpresa)
                .ValueGeneratedNever()
                .HasColumnName("id_empresa");
            entity.Property(e => e.DbName)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("DB_Name");
            entity.Property(e => e.NombreEmpresa)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<NominaHuella>(entity =>
        {
            entity.HasKey(e => e.IdChecador).HasName("PK__huellas___EA921C7237CE96D3");

            entity.ToTable("nomina_huellas");

            entity.Property(e => e.IdChecador)
                .ValueGeneratedNever()
                .HasColumnName("id_checador");
            entity.Property(e => e.Fp00).HasColumnName("FP_00");
            entity.Property(e => e.Fp01).HasColumnName("FP_01");
            entity.Property(e => e.Fp02).HasColumnName("FP_02");
            entity.Property(e => e.Fp03).HasColumnName("FP_03");
            entity.Property(e => e.Fp04).HasColumnName("FP_04");
            entity.Property(e => e.Fp05).HasColumnName("FP_05");
            entity.Property(e => e.Fp06).HasColumnName("FP_06");
            entity.Property(e => e.Fp07).HasColumnName("FP_07");
            entity.Property(e => e.Fp08).HasColumnName("FP_08");
            entity.Property(e => e.Fp09).HasColumnName("FP_09");
            entity.Property(e => e.Fp10).HasColumnName("FP_10");
        });

        modelBuilder.Entity<NominaRegistro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("nomina_registros");

            entity.Property(e => e.Fecha)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("fecha");
            entity.Property(e => e.Hora)
                .HasMaxLength(255)
                .HasColumnName("hora");
            entity.Property(e => e.IdChecador)
                .HasMaxLength(10)
                .HasColumnName("id_checador");
            entity.Property(e => e.Tipo)
                .HasMaxLength(255)
                .HasColumnName("tipo");
        });

        modelBuilder.Entity<TpvCaja>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__tpv_caja__3213E83F1689FF07");

            entity.ToTable("tpv_cajas");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.AbonadosSdk)
                .HasMaxLength(255)
                .HasComment("Código de concepto para abonados comedores")
                .HasColumnName("abonados_SDK");
            entity.Property(e => e.BecasSdk)
                .HasMaxLength(255)
                .HasComment("Código de concepto para becas comedores")
                .HasColumnName("becas_SDK");
            entity.Property(e => e.ConceptoSdk)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("Código de concepto para documentos")
                .HasColumnName("concepto_SDK");
            entity.Property(e => e.EmpleadosSdk)
                .HasMaxLength(255)
                .HasComment("Código de concepto para alimentos de empleados")
                .HasColumnName("empleados_SDK");
            entity.Property(e => e.EmpresaSdk)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("Nombre de la empresa comercial")
                .HasColumnName("empresa_SDK");
            entity.Property(e => e.HorarioAbierto)
                .IsRequired()
                .HasMaxLength(2)
                .HasComment("Horario de ventas abierto")
                .HasColumnName("horario_abierto");
            entity.Property(e => e.IdUsuario)
                .HasComment("Usuario que tiene asignada la caja")
                .HasColumnName("id_usuario");
            entity.Property(e => e.ImgColor)
                .HasComment("Imagen en color de la empresa")
                .HasColumnName("imgColor");
            entity.Property(e => e.MailNotify)
                .HasMaxLength(255)
                .HasComment("Correos de notificacion")
                .HasColumnName("mail_notify");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("Nombre de la caja")
                .HasColumnName("nombre");
            entity.Property(e => e.PrintName)
                .HasMaxLength(255)
                .HasComment("Nombre de la impresora")
                .HasColumnName("print_NAME");
            entity.Property(e => e.PrintSoft)
                .HasMaxLength(255)
                .HasComment("Software para la impresión")
                .HasColumnName("print_SOFT");
        });

        modelBuilder.Entity<TpvCajasAlmacene>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tpv_cajas_almacenes");

            entity.Property(e => e.IdCaja)
                .HasComment("id de la caja")
                .HasColumnName("id_caja");
            entity.Property(e => e.IdSdk)
                .HasMaxLength(9)
                .HasComment("id almacen en ContPAQ")
                .HasColumnName("id_SDK");
            entity.Property(e => e.NombreSdk)
                .HasMaxLength(255)
                .HasComment("nombre almacen en ContPAQ")
                .HasColumnName("nombre_SDK");
        });

        modelBuilder.Entity<TpvCajasCorte>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__tpv_caja__3213E83F75E7DD69");

            entity.ToTable("tpv_cajas_cortes");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.DineroCierre).HasColumnName("dinero_cierre");
            entity.Property(e => e.DineroInicio).HasColumnName("dinero_inicio");
            entity.Property(e => e.Estado)
                .IsRequired()
                .HasMaxLength(2)
                .HasComment("A=Abierto C=Cerrado")
                .HasColumnName("estado");
            entity.Property(e => e.FechaCierre)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("fecha_cierre");
            entity.Property(e => e.FechaInicio)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("fecha_inicio");
            entity.Property(e => e.IdCaja).HasColumnName("id_caja");
            entity.Property(e => e.NumeroOperaciones).HasColumnName("numero_operaciones");
            entity.Property(e => e.NumeroProductos).HasColumnName("numero_productos");
            entity.Property(e => e.UtilidadNeta).HasColumnName("utilidad_neta");
        });

        modelBuilder.Entity<TpvOrdenesPago>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__tpv_orde__3213E83F13E86796");

            entity.ToTable("tpv_ordenes_pagos");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Aviso).HasColumnName("aviso");
            entity.Property(e => e.Concepto)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("Concepto de pago")
                .HasColumnName("concepto");
            entity.Property(e => e.Estado)
                .IsRequired()
                .HasMaxLength(30)
                .HasComment("Estado de la Orden")
                .HasColumnName("estado");
            entity.Property(e => e.IdParticipante)
                .HasComment("Id del participante asociado")
                .HasColumnName("id_participante");
            entity.Property(e => e.IdRefBanamex)
                .HasMaxLength(255)
                .HasComment("Referencia banamex asignada")
                .HasColumnName("id_ref_banamex");
            entity.Property(e => e.IdReferencia)
                .IsRequired()
                .HasMaxLength(30)
                .HasComment("Referencia de la orden de pago")
                .HasColumnName("id_referencia");
            entity.Property(e => e.Monto)
                .HasComment("Monto a pagar")
                .HasColumnName("monto");
            entity.Property(e => e.SistemaEmisor)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("Sistema donde se originó la orden")
                .HasColumnName("sistema_emisor");
            entity.Property(e => e.SistemaReceptor)
                .HasMaxLength(255)
                .HasComment("Sistema en el que se recibe el pago")
                .HasColumnName("sistema_receptor");
            entity.Property(e => e.TiempoCreacion)
                .HasComment("Tiempo de generacion de orden")
                .HasColumnName("tiempo_creacion");
            entity.Property(e => e.TiempoLimite)
                .HasComment("Tiempo limite de pago")
                .HasColumnName("tiempo_limite");
            entity.Property(e => e.TiempoPago)
                .HasComment("Tiempo en el que se recibió el pago")
                .HasColumnName("tiempo_pago");
        });

        modelBuilder.Entity<TpvRefBanamex>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__tpv_ref___3213E83FBC62844B");

            entity.ToTable("tpv_ref_banamex");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Alfanumerica)
                .HasMaxLength(255)
                .HasColumnName("alfanumerica");
            entity.Property(e => e.AlfanumericaDv)
                .HasMaxLength(255)
                .HasColumnName("alfanumericaDV");
            entity.Property(e => e.Cta)
                .HasMaxLength(255)
                .HasColumnName("cta");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.Suc)
                .HasMaxLength(255)
                .HasColumnName("suc");
        });

        modelBuilder.Entity<TpvSucursale>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__tpv_sucu__3213E83F11632F13");

            entity.ToTable("tpv_sucursales");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
        });

        modelBuilder.Entity<TpvUsuario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__tpv_usua__3213E83F69D51572");

            entity.ToTable("tpv_usuarios");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.AccesoFecha)
                .HasMaxLength(255)
                .HasColumnName("acceso_fecha");
            entity.Property(e => e.AccesoHora)
                .HasMaxLength(255)
                .HasColumnName("acceso_hora");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasComment("(A)ctivo (I)nactivo")
                .HasColumnName("estado");
            entity.Property(e => e.Huella1).HasColumnName("huella1");
            entity.Property(e => e.Huella2).HasColumnName("huella2");
            entity.Property(e => e.Materno)
                .HasMaxLength(255)
                .HasColumnName("materno");
            entity.Property(e => e.Nombres)
                .HasMaxLength(255)
                .HasColumnName("nombres");
            entity.Property(e => e.Pass)
                .HasMaxLength(255)
                .HasComment("Contraseña")
                .HasColumnName("pass");
            entity.Property(e => e.Paterno)
                .HasMaxLength(255)
                .HasColumnName("paterno");
            entity.Property(e => e.Tipo)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("(A)dministrador (S)upervisor (V)endedor")
                .HasColumnName("tipo");
            entity.Property(e => e.Usuario)
                .HasMaxLength(255)
                .HasColumnName("usuario");
        });

        modelBuilder.Entity<TpvVenta>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__tpv_vent__3213E83F256C0DC6");

            entity.ToTable("tpv_ventas");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Cliente)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("cliente");
            entity.Property(e => e.Descuentos).HasColumnName("descuentos");
            entity.Property(e => e.Estado)
                .IsRequired()
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.Fecha)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("fecha");
            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("folio");
            entity.Property(e => e.IdCorte).HasColumnName("id_corte");
            entity.Property(e => e.Motivo)
                .HasMaxLength(255)
                .HasColumnName("motivo");
            entity.Property(e => e.Serie)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("serie");
            entity.Property(e => e.Tipopago)
                .IsRequired()
                .HasMaxLength(2)
                .HasColumnName("tipopago");
            entity.Property(e => e.Tipoventa)
                .IsRequired()
                .HasMaxLength(30)
                .HasColumnName("tipoventa");
            entity.Property(e => e.Total).HasColumnName("total");
        });

        modelBuilder.Entity<TpvVentasAux>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__tpv_vent__3213E83FF5F8BA18");

            entity.ToTable("tpv_ventas_aux");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Almacen)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("almacen");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Catacteristicas)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("catacteristicas");
            entity.Property(e => e.Codigo)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("codigo");
            entity.Property(e => e.Descuento).HasColumnName("descuento");
            entity.Property(e => e.IdVenta).HasColumnName("id_venta");
            entity.Property(e => e.Precio).HasColumnName("precio");
            entity.Property(e => e.Producto)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("producto");
            entity.Property(e => e.Tipo)
                .HasMaxLength(20)
                .HasComment("R_regular D_donativo")
                .HasColumnName("tipo");
            entity.Property(e => e.Total).HasColumnName("total");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => new { e.Id, e.Usuario1 }).HasName("PK__usuarios__5BBC10C3AB54E8C7");

            entity.ToTable("usuarios");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Usuario1)
                .HasMaxLength(255)
                .HasColumnName("usuario");
            entity.Property(e => e.Correo)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("correo");
            entity.Property(e => e.Estado)
                .HasMaxLength(255)
                .HasColumnName("estado");
            entity.Property(e => e.Materno)
                .HasMaxLength(150)
                .HasColumnName("materno");
            entity.Property(e => e.Nombre)
                .HasMaxLength(200)
                .HasColumnName("nombre");
            entity.Property(e => e.Paterno)
                .HasMaxLength(150)
                .HasColumnName("paterno");
            entity.Property(e => e.Secreto)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("secreto");
            entity.Property(e => e.TelMovil).HasColumnName("tel_movil");
            entity.Property(e => e.UaHost)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("ua_host");
            entity.Property(e => e.UaIp)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("ua_ip");
            entity.Property(e => e.UaTime)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("ua_time");
        });

        modelBuilder.Entity<UsuariosEmpresa>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__usuarios__3213E83FD65C9532");

            entity.ToTable("usuarios_empresas");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasComment("id del acceso")
                .HasColumnName("id");
            entity.Property(e => e.IdUsuario)
                .HasComment("id del usuario")
                .HasColumnName("id_usuario");
            entity.Property(e => e.OpEmpresas)
                .IsRequired()
                .HasComment("id de la empresa")
                .HasColumnName("op_empresas");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}